<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>EECS Society</title><link href="http://eecs.io/" rel="alternate"></link><link href="http://eecs.io/feeds/reproducibility.atom.xml" rel="self"></link><id>http://eecs.io/</id><updated>2014-04-06T16:12:00+01:00</updated><entry><title>The practical side of reproducibility</title><link href="http://eecs.io/the-practical-side-of-reproducibility.html" rel="alternate"></link><updated>2014-04-06T16:12:00+01:00</updated><author><name>Dmitrijs Milajevs</name></author><id>tag:eecs.io,2014-04-06:the-practical-side-of-reproducibility.html</id><summary type="html">&lt;p&gt;In the &lt;a class="reference external" href="http://eecs.io/software-in-your-reproducible-research.html"&gt;previous post&lt;/a&gt; I pointed out some
difficulties of developing a reproducible experiment. Over a weekend, I've
applied some of that ideas to &lt;a class="reference external" href="http://www.eecs.qmul.ac.uk/~dm303/cvsc14.html"&gt;my paper&lt;/a&gt; and would like to share my
experience.&lt;/p&gt;
&lt;p&gt;This is the second attempt of making this work reproducible. The first was done
by &lt;a class="reference external" href="http://docs.vagrantup.com/v2/boxes.html"&gt;Alexander Konovalov&lt;/a&gt;, &lt;a class="reference external" href="http://alexk.host.cs.st-andrews.ac.uk"&gt;Devasena Inupakutika&lt;/a&gt;, &lt;a class="reference external" href="http://www.software.ac.uk/about/people/devasena-inupakutika"&gt;Steve Crouch&lt;/a&gt; and me at
the &lt;a class="reference external" href="http://www.software.ac.uk/about/people/steve-crouch"&gt;Collaborations Workshop&lt;/a&gt;. Our aim was to reproduce an experiment and run
it in &lt;a class="reference external" href="http://azure.microsoft.com/"&gt;Microsoft Azure&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By that time I'd already had a &lt;a class="reference external" href="http://www.software.ac.uk/collaborations-workshop-2014-cw14-software-your-reproducible-research"&gt;Vagrant box&lt;/a&gt; that contained all the necessary
software. However, Fedora 20, the OS I used, is not supported by Azure, so we
had to use another OS.&lt;/p&gt;
&lt;p&gt;Finally, we managed to create a VM image and run the experiment in the cloud.
However, deployment took most of the time, because we had to install the system
dependencies manually. It was a messy list of development libraries and Python
3.3.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;div class="section" id="automating-things"&gt;
&lt;h2&gt;Automating things&lt;/h2&gt;
&lt;p&gt;We would spend much less time on deployment if we had an idea what packages we
needed to install. A declarative description of what packages had to be
installed would help us a lot. Luckily, &lt;a class="reference external" href="https://salt.readthedocs.org/en/latest/"&gt;salt&lt;/a&gt;,  which nicely &lt;a class="reference external" href="http://docs.vagrantup.com/v2/provisioning/salt.html"&gt;integrates with
Vagrant&lt;/a&gt;, allows to do exactly this.&lt;/p&gt;
&lt;p&gt;While vagrant abstracts away all the difficulty and diversity of virtualization
software, salt hides away the quirks of the guest OS. Salt describes the desired
OS configuration as a set of &lt;a class="reference external" href="http://salt.readthedocs.org/en/latest/topics/tutorials/starting_states.html"&gt;states&lt;/a&gt;. A state can be an installed package, a
file or &lt;a class="reference external" href="http://salt.readthedocs.org/en/v0.17.5/ref/states/all/index.html"&gt;almost anything else&lt;/a&gt;. In &lt;a class="reference external" href="https://bitbucket.org/dimazest/phd-buildout/src/722ad58af0e3b8a3987758204b9bc78f46395b30/Vagrantfile"&gt;my Vagrant setup&lt;/a&gt;, I got &lt;a class="reference external" href="https://bitbucket.org/dimazest/phd-buildout/src/722ad58af0e3b8a3987758204b9bc78f46395b30/salt/roots/salt/basic.sls"&gt;4 kinds of salt states&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="system-packages"&gt;
&lt;h3&gt;System packages&lt;/h3&gt;
&lt;p&gt;The first class of states describes what system packages have to be installed.
Here is the relevant part of the configuration file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;packages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;atlas-sse3-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;blas-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;bzip2-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;czmq-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;freetype-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;gcc-c++&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;git&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;hdf5-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;htop&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;libpng-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;libyaml-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;lzo-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;mercurial&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-Cython&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-matplotlib&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-numexpr&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-numpy&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-PyYAML&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-scikit-learn&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-scipy&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-setuptools&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-tables&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-zmq&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;tmux&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;unzip&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;pkg&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;packages&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;pkg&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;:&lt;/span&gt;
&lt;span class="x"&gt;  pkg.installed&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Because salt configuration files are &lt;a class="reference external" href="http://jinja.pocoo.org"&gt;Jinja&lt;/a&gt; templates, it is possible to avoid
unnecessary repetition and keep the configuration file clear.&lt;/p&gt;
&lt;div class="section" id="system-configuration"&gt;
&lt;h4&gt;System configuration&lt;/h4&gt;
&lt;p&gt;The second set of packages configures the system and leaves some hints on how to
run the experiments. The &lt;tt class="docutils literal"&gt;README&lt;/tt&gt; file lists the commands needed to be run to
execute experiments presented in the paper.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="l-Scalar-Plain"&gt;bashrc&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.append&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/.bashrc&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;text&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;export LC_ALL=&amp;quot;en_US.UTF-8&amp;quot;&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;/etc/motd&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.append&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;text&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p-Indicator"&gt;|&lt;/span&gt;
        &lt;span class="no"&gt;Dialogue act tagging.&lt;/span&gt;

        &lt;span class="no"&gt;This is an isolated environment to run dialogue act tagging experiments.&lt;/span&gt;
        &lt;span class="no"&gt;For more details, see http://www.eecs.qmul.ac.uk/~dm303/cvsc14.html&lt;/span&gt;

        &lt;span class="no"&gt;Check README for further instructions.&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;README&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.copy&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/README&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/srv/home/README&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;force&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;true&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;tmux_conf&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.copy&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/.tmux.conf&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/srv/home/tmux.conf&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;force&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="deployment"&gt;
&lt;h3&gt;Deployment&lt;/h3&gt;
&lt;p&gt;The deployment states retrieve the custom experiment software and deploy it. In
my setup I use buildout. By the way, the same buildout configuration is used for
development, which guarantees that it's up to date.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="l-Scalar-Plain"&gt;tools&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;hg.latest&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;https://dimazest@bitbucket.org/dimazest/phd-buildout&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;target&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/tools&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;rev&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;tip&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;runas&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;vagrant&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;tools_buildout.cfg&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.symlink&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/tools/buildout.cfg&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;target&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/tools/_buildout.cfg&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;require&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
      &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hg&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;tools&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;tools_buildout_bootstrap&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;cmd.run&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;python3.3 bootstrap.py&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;cwd&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/tools&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;user&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;vagrant&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;unless&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;ls /home/vagrant/tools/bin/buildout&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;buildout&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;cmd.run&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;bin/buildout&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;cwd&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/tools&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;user&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;vagrant&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;env&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
      &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;LC_ALL&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;en_US.UTF-8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="data"&gt;
&lt;h3&gt;Data&lt;/h3&gt;
&lt;p&gt;The experiments use several resources. &lt;a class="reference external" href="http://compprag.christopherpotts.net/swda.html"&gt;The Switchboard corpus&lt;/a&gt;, its typical
training and testing splits and the word vector spaces. All the data is acquired
and put to the right place by salt:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="l-Scalar-Plain"&gt;swda&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.managed&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/swda.zip&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;http://compprag.christopherpotts.net/code-data/swda.zip&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source_hash&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;sha512=fb24f4c5be4e69490535951237a41cd320fe53d7fb2782d3624b0bb99da7a4461ad1ee8bbfeb3e22e38e0b706ae377787d437eb9308d6d32bf16481f7dd1f228&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;swda_unzip&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;cmd.run&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;yes | unzip swda.zip&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;cwd&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;unless:&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;ls /home/vagrant/swda/&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;swda_train_split&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.managed&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/downloads/switchboard/ws97-train-convs.list.txt&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;http://www.eecs.qmul.ac.uk/~dm303/static/papers/cvsc14/ws97-train-convs.list.txt&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source_hash&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;sha512=d497e4152afc8e3792cfadd0c52ebafad85aea21b65efc5918189a90dfe4aed2604e3d2b6827343d49425b5985a8eb39a3a4729d1c45e572757b4cecb5341bc0&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;swda_test_split&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.managed&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/downloads/switchboard/ws97-test-convs.list.txt&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;http://www.eecs.qmul.ac.uk/~dm303/static/papers/cvsc14/ws97-test-convs.list.txt&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source_hash&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;sha512=cb7e53d3471e63d46b12608db0f2b372c99269a2b7cfa6a4e0997cd7e22d518d5e227a19a572b4de2ce0773434ca5e9ee82022cd88408592dfa16492e3fb0f03&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;nltk_data&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;cmd.run&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/tools/bin/fowler.corpora-py -c &amp;quot;import nltk; nltk.download(&amp;#39;all&amp;#39;)&amp;quot;&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;creates&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/nltk_data&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;user&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;vagrant&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;cvsc14_space_raw&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.managed&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/data/matrix_swda_c-google-100_3k.h5&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;http://www.eecs.qmul.ac.uk/~dm303/static/papers/cvsc14/matrix_swda_c-google-100_3k.h5&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source_hash&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;sha512=c15a9f2d7117305bbcb1b32123e62cfdf0861548d3dc6c2401fd23eeffcb7053c9aa51c16b3ec15236d9aa78385966f92fc5594d77c2ef1066915d20e80d29c4&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;cvsc14_space_tf_idf&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.managed&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/data/matrix_swda_c-google-100_3k_tf-idf-l2.h5&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;http://www.eecs.qmul.ac.uk/~dm303/static/papers/cvsc14/matrix_swda_c-google-100_3k_tf-idf-l2.h5&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source_hash&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;sha512=153572ed754674337a985a8c6ae140cdab73227e2ba74cddad03d13c9e797c32a164b3e917fca43d05bd0238e7a12dce5c5bd24c0f5aec53ed396c31408b023f&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;cvsc14_space_nmf&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.managed&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/data/matrix_swda_c-google-100_3k_line_normalized_nmf1k.h5&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;http://www.eecs.qmul.ac.uk/~dm303/static/papers/cvsc14/matrix_swda_c-google-100_3k_line_normalized_nmf1k.h5&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source_hash&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;sha512=ca14e57e5ceed8073d259088644df6847a9c549b1bad61c9df8563da78ca7f1c239f29b6cbac04091aca90d8c135daff48b7eda8c22b48ffb0cf592f60df6eb5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a nice bonus, the checksums are checked to guarantee that you get the same
data as I.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="meta-experiment"&gt;
&lt;h2&gt;Meta experiment&lt;/h2&gt;
&lt;p&gt;Now, the experiment can be rerun in a few steps:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;hg clone https://bitbucket.org/dimazest/phd-buildout
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;phd-buildout
&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant up  &lt;span class="c"&gt;# I had to wait for 48 minutes...&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant ssh
Last login: Sun Apr  6 14:29:55 2014
Dialogue act tagging.

This is an isolated environment to run dialogue act tagging experiments.
For more details, see http://www.eecs.qmul.ac.uk/~dm303/cvsc14.html

Check README &lt;span class="k"&gt;for &lt;/span&gt;further instructions.
&lt;span class="o"&gt;[&lt;/span&gt;vagrant@localhost ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;tools/bin/corpora serafin03 plain-lsa  &lt;span class="c"&gt;# A nice opportunity for my laptop&amp;#39;s fan to show it&amp;#39;s presence :)&lt;/span&gt;
:paper: Serafin et al. 2003
:accuracy: 0.617
:command: tools/bin/corpora serafin03 plain-lsa

&lt;span class="o"&gt;====================&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt;
                 tag  precision     recall   f1-score    &lt;span class="nv"&gt;support&lt;/span&gt;
&lt;span class="o"&gt;====================&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt;
                   %      0.515      0.694      0.592        360
                  ^2      0.190      0.211      0.200         19
                  ^h      0.200      0.143      0.167          7
                  ^q      0.000      0.000      0.000         17
                  aa      0.515      0.327      0.400        208
             aap&lt;span class="se"&gt;\_&lt;/span&gt;am      0.000      0.000      0.000          7
                  ad      0.143      0.037      0.059         27
                  ar      0.000      0.000      0.000          3
             arp&lt;span class="se"&gt;\_&lt;/span&gt;nd      0.000      0.000      0.000          3
                   b      0.764      0.916      0.834        765
                 b^m      0.000      0.000      0.000         21
                  ba      0.529      0.724      0.611         76
                  bd      1.000      1.000      1.000          1
                  bf      0.000      0.000      0.000         23
                  bh      0.480      0.571      0.522         21
                  bk      0.327      0.571      0.416         28
                  br      0.714      0.556      0.625          9
                  fa      0.500      0.500      0.500          2
                  &lt;span class="nb"&gt;fc      &lt;/span&gt;0.660      0.432      0.522         81
fo&lt;span class="se"&gt;\_&lt;/span&gt;o&lt;span class="se"&gt;\_&lt;/span&gt;fw&lt;span class="se"&gt;\_&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\_&lt;/span&gt;by&lt;span class="se"&gt;\_&lt;/span&gt;bc      0.250      0.062      0.100         16
                  fp      0.333      0.200      0.250          5
                  ft      0.000      0.000      0.000          7
                   h      0.667      0.609      0.636         23
                  na      0.000      0.000      0.000         10
                  ng      0.500      0.167      0.250          6
                  nn      0.479      0.885      0.622         26
                  no      0.000      0.000      0.000          6
                  ny      0.455      0.068      0.119         73
                  qh      0.250      0.083      0.125         12
                  qo      0.524      0.688      0.595         16
                 qrr      0.250      0.500      0.333          2
                  qw      0.594      0.345      0.437         55
                qw^d      0.000      0.000      0.000          1
                  qy      0.425      0.405      0.415         84
                qy^d      0.308      0.111      0.163         36
                  sd      0.620      0.790      0.695       1317
                  sv      0.568      0.255      0.352        718
                  t1      0.000      0.000      0.000          1
                   x      0.887      1.000      0.940         94
-------------------- ---------- ---------- ---------- ----------
  weighted avg/total      0.592      0.617      0.582       &lt;span class="nv"&gt;4186&lt;/span&gt;
&lt;span class="o"&gt;====================&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt;

The model is trained on the full development set.
The scores are computed on the full evaluation set.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="future-work"&gt;
&lt;h2&gt;Future work&lt;/h2&gt;
&lt;p&gt;There are several ways to improve the setup.&lt;/p&gt;
&lt;p&gt;So far, I've used Fedora 20 as the guest OS. It's possible to configure salt to
&lt;a class="reference external" href="http://salt.readthedocs.org/en/v0.17.5/topics/tutorials/states_pt3.html#using-grains-in-sls-modules"&gt;perform different actions for different OS&lt;/a&gt;. For example, it would be nice to
have support for Ubuntu, or even &lt;a class="reference external" href="http://www.gentoo.org/proj/en/gentoo-alt/prefix/"&gt;Gentoo prefix&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Adaptation to another provisioner, for example, &lt;a class="reference external" href="http://docs.vagrantup.com/v2/provisioning/docker.html"&gt;Docker&lt;/a&gt; to minimize isolation
overhead would be another great enhancement.&lt;/p&gt;
&lt;p&gt;Nicer data management, probably, using &lt;a class="reference external" href="http://dat-data.com"&gt;dat&lt;/a&gt; would keep the setup clearer.&lt;/p&gt;
&lt;p&gt;Finally, it would be nice to deploy the created virtual machine in a cloud and
run all the experiments there. The trick is that some experiments require quite
a lot of RAM and were originally run on a machine with 16 CPUs and 128 GB of
RAM.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="vagrant"></category><category term="salt"></category><category term="deployment"></category></entry><entry><title>Software in your reproducible research</title><link href="http://eecs.io/software-in-your-reproducible-research.html" rel="alternate"></link><updated>2014-03-28T17:22:00+00:00</updated><author><name>Dmitrijs Milajevs</name></author><id>tag:eecs.io,2014-03-28:software-in-your-reproducible-research.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://software.ac.uk/cw14"&gt;Collaborations Workshop 2014 (CW14)&lt;/a&gt; took place
in Oxford in the end of March. I was lucky to attend the last day of the meeting
dedicated to ad-hock hacking. I would characterize the main topic of the
workshop as introduction of qualitative software development in scientific
environment.  Here are my thoughts, why &lt;a class="reference external" href="https://twitter.com/dimazest/status/449484586717048832"&gt;reproducibility is a dream that easily
becomes a nightmare&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;I'll start by comparing scientists to professional programmers and operations
and argue that for an experiment to be reproducible the software has to be
reusable. Then, I'll give some suggestions on how to make a reproducible setup.&lt;/p&gt;
&lt;div class="section" id="scientists-are-developers"&gt;
&lt;h2&gt;Scientists are developers&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pydata.org/ldn2014/speakers/#168"&gt;Mark Basham&lt;/a&gt; at &lt;a class="reference external" href="http://pydata.org/ldn2014"&gt;PyData London&lt;/a&gt; stated, what I consider, the pain of researchers
in one sentence. Here is my free recall:&lt;/p&gt;
&lt;blockquote&gt;
Nowadays, scientists have to process so much data that they &lt;strong&gt;have to&lt;/strong&gt;
become programmers.&lt;/blockquote&gt;
&lt;p&gt;I completely agree with it. It's not possible anymore to successfully run an
experiment without using highly optimized libraries for computation, IO and
result representation.&lt;/p&gt;
&lt;p&gt;I would go even further and explain the growing popularity of Python and other
high level languages by the fact that they hide complex implementation behind
simple interfaces (see &lt;a class="reference external" href="http://scikit-learn.org/stable/"&gt;scikit-learn's&lt;/a&gt; &lt;a class="reference external" href="https://github.com/scikit-learn/scikit-learn/blob/6b38d3b3051b4be298d4df4978dc35b56d5eb3a6/sklearn/cross_validation.py"&gt;cross validation code&lt;/a&gt; for an
example).&lt;/p&gt;
&lt;p&gt;Therefore, readability and understandability of code plays an important role. To
the extent that it's very tempting to use the development version of a library
when the code is being written. For example, the user interface of &lt;a class="reference external" href="https://github.com/ipython/ipython/blob/0485089180ff70feac77bd01bf23a410a787d8e5/docs/source/whatsnew/development.rst"&gt;IPython
2&lt;/a&gt;, which is still under development at the moment of writing, improved a lot
in comparison to the current stable version. Quite often development versions
fix encountered bugs, which might be to small to deserve a dedicated release.&lt;/p&gt;
&lt;p&gt;In this mode a scientist behaves like a developer. The more recent is the
software the better.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="scientists-are-not-operations"&gt;
&lt;h2&gt;Scientists are not operations&lt;/h2&gt;
&lt;p&gt;In a software company, eagerness of developers is usually compensated by wisdom
of operations, the people responsible for running and supporting software.&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;operations:&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;/ɒpəˈreɪʃ(ə)ns/&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;noun&lt;/cite&gt;&lt;/p&gt;
&lt;ol class="last arabic simple"&gt;
&lt;li&gt;people who are responsible for deploying and monitoring
services in a company.&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;In academia, usually, there is much less interest to code. Not everyone is
interested to study how an experiment is implemented. The main deliverable from
a scientist-developer is a result that hopefully beats the current state of the
art. In addition, scientists-developers have a strong opinion on what tools to
use and prefer to reinvent a wheel, rather than reuse code written by other
scientists.&lt;/p&gt;
&lt;p&gt;The problem is that it's not easy to reuse code. It has to at least be
documented and well written. Both of the points require a lot of effort, which
might not be appreciated.&lt;/p&gt;
&lt;!-- Now it's a bit messy --&gt;
&lt;/div&gt;
&lt;div class="section" id="scientists-should-be-operations"&gt;
&lt;h2&gt;Scientists should be operations&lt;/h2&gt;
&lt;p&gt;Why should scientist care about the quality of their code? The main reason is
that eventually good code will be reused by someone else. Someone else could be
yet another person in a group, or in a group in another research center. Also,
having a widely adopted tool minimizes amount of surprises. For example, &lt;a class="reference external" href="https://github.com/nltk/nltk/blob/develop/nltk/corpus/reader/bnc.py"&gt;NLTK's
BNC reader&lt;/a&gt;, which takes care of &lt;a class="reference external" href="https://github.com/nltk/nltk/issues/70"&gt;some corner cases&lt;/a&gt;. (A note for a careful
reader: the amount of &lt;a class="reference external" href="https://twitter.com/dimazest/status/442723017958129664"&gt;regexp based code written to process XML&lt;/a&gt; is at least
10 times larger than you think.)&lt;/p&gt;
&lt;p&gt;The bad news is that even &lt;a class="reference external" href="http://maurits.vanrees.org/weblog/archive/2013/05/holger-krekel-re-inventing-python-packaging-testing"&gt;developers are still working on easy code reuse&lt;/a&gt;, aka
packaging, to make operations' live easier!&lt;/p&gt;
&lt;p&gt;Since scientists are already developers, they should learn from operations. This
means that the environment the code runs should be similar from the moment it's
being developed to the moment it's being deployed. This prevents bugs and
minimizes works-for-me situations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-good-project"&gt;
&lt;h2&gt;A good project&lt;/h2&gt;
&lt;p&gt;The documentation of a good project should include testing and deployment
instructions.&lt;/p&gt;
&lt;p&gt;The process should be automated as much as possible. &lt;a class="reference external" href="http://www.testrun.org/tox/"&gt;Tox&lt;/a&gt; is a tool that provides a unified interface to
run tests and hides differences across different test runners.&lt;/p&gt;
&lt;p&gt;In the Python world, usage of eggs and listing of the requirements in
&lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt; and their versions in &lt;tt class="docutils literal"&gt;requirements.txt&lt;/tt&gt; makes deployment
easier, but solves only half of the problem: it takes care only of Python
dependencies and ignores system dependencies, such as libraries written in C.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://vagrantup.com"&gt;Vagrant&lt;/a&gt; is a great tool for virtual machine
management. It allows to use a completely isolated environment as if it was
local. For example, on my Mac I can start a vagrant box with CentOS 6.5 and have
the same environment as the computing server I'll use.&lt;/p&gt;
&lt;p&gt;Taking this into account, this should be necessary steps to run/develop
scientific software:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Get the Vagrant config&lt;/span&gt;
git/hg clone http://project-site.org/project
&lt;span class="nb"&gt;cd &lt;/span&gt;project

&lt;span class="c"&gt;# Start the virtual environment&lt;/span&gt;
vagrant up

&lt;span class="c"&gt;# Connect to it&lt;/span&gt;
vagrant ssh

&lt;span class="c"&gt;# All system dependencies are installed&lt;/span&gt;
cat README
Dialogue act tagging

The environment to run experiments described in Joe Doe. 2015. The Ultimate Dialogue act tagging.

Refer to http://project-site.org/ &lt;span class="k"&gt;for &lt;/span&gt;more information.

The experiment data is stored data/. To &lt;span class="nb"&gt;test &lt;/span&gt;the setup run:

    tox

To run the experiment &lt;span class="nb"&gt;type&lt;/span&gt;:

    bin/tagger doe2015

&lt;span class="c"&gt;# Now I know what to do and happily run the experiment&lt;/span&gt;
bin/tagger doe2015
Tagging accuracy is 100%.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All this fancy and clear setup requires loads of love and care. A virtual
machine image has to be built and hosted somewhere. It has to be updated from
time to time. This is why reproducibility can easily become a nightmare.&lt;/p&gt;
&lt;p&gt;On other hand, having a virtual machine image it can be deployed in a cloud on a
powerful machine in the matter of minutes.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="cw14"></category><category term="programming"></category><category term="reproducibility"></category></entry></feed>