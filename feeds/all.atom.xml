<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>EECS Society</title><link href="http://qmcs.github.io/" rel="alternate"></link><link href="http://qmcs.github.io/feeds/all.atom.xml" rel="self"></link><id>http://qmcs.github.io/</id><updated>2014-04-06T16:12:00+01:00</updated><entry><title>The practical side of reproducibility</title><link href="http://qmcs.github.io/the-practical-side-of-reproducibility.html" rel="alternate"></link><updated>2014-04-06T16:12:00+01:00</updated><author><name>Dmitrijs Milajevs</name></author><id>tag:qmcs.github.io,2014-04-06:the-practical-side-of-reproducibility.html</id><summary type="html">&lt;p&gt;In the &lt;a class="reference external" href="http://qmcs.github.io/software-in-your-reproducible-research.html"&gt;previous post&lt;/a&gt; I pointed out some
difficulties of developing a reproducible experiment. Over a weekend, I've
applied some of that ideas to &lt;a class="reference external" href="http://www.eecs.qmul.ac.uk/~dm303/cvsc14.html"&gt;my paper&lt;/a&gt; and would like to share my
experience.&lt;/p&gt;
&lt;p&gt;This is the second attempt of making this work reproducible. The first was done
by &lt;a class="reference external" href="http://docs.vagrantup.com/v2/boxes.html"&gt;Alexander Konovalov&lt;/a&gt;, &lt;a class="reference external" href="http://alexk.host.cs.st-andrews.ac.uk"&gt;Devasena Inupakutika&lt;/a&gt;, &lt;a class="reference external" href="http://www.software.ac.uk/about/people/devasena-inupakutika"&gt;Steve Crouch&lt;/a&gt; and me at
the &lt;a class="reference external" href="http://www.software.ac.uk/about/people/steve-crouch"&gt;Collaborations Workshop&lt;/a&gt;. Our aim was to reproduce an experiment and run
it in &lt;a class="reference external" href="http://azure.microsoft.com/"&gt;Microsoft Azure&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By that time I'd already had a &lt;a class="reference external" href="http://www.software.ac.uk/collaborations-workshop-2014-cw14-software-your-reproducible-research"&gt;Vagrant box&lt;/a&gt; that contained all the necessary
software. However, Fedora 20, the OS I used, is not supported by Azure, so we
had to use another OS.&lt;/p&gt;
&lt;p&gt;Finally, we managed to create a VM image and run the experiment in the cloud.
However, deployment took most of the time, because we had to install the system
dependencies manually. It was a messy list of development libraries and Python
3.3.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;div class="section" id="automating-things"&gt;
&lt;h2&gt;Automating things&lt;/h2&gt;
&lt;p&gt;We would spend much less time on deployment if we had an idea what packages we
needed to install. A declarative description of what packages had to be
installed would help us a lot. Luckily, &lt;a class="reference external" href="https://salt.readthedocs.org/en/latest/"&gt;salt&lt;/a&gt;,  which nicely &lt;a class="reference external" href="http://docs.vagrantup.com/v2/provisioning/salt.html"&gt;integrates with
Vagrant&lt;/a&gt;, allows to do exactly this.&lt;/p&gt;
&lt;p&gt;While vagrant abstracts away all the difficulty and diversity of virtualization
software, salt hides away the quirks of the guest OS. Salt describes the desired
OS configuration as a set of &lt;a class="reference external" href="http://salt.readthedocs.org/en/latest/topics/tutorials/starting_states.html"&gt;states&lt;/a&gt;. A state can be an installed package, a
file or &lt;a class="reference external" href="http://salt.readthedocs.org/en/v0.17.5/ref/states/all/index.html"&gt;almost anything else&lt;/a&gt;. In &lt;a class="reference external" href="https://bitbucket.org/dimazest/phd-buildout/src/722ad58af0e3b8a3987758204b9bc78f46395b30/Vagrantfile"&gt;my Vagrant setup&lt;/a&gt;, I got &lt;a class="reference external" href="https://bitbucket.org/dimazest/phd-buildout/src/722ad58af0e3b8a3987758204b9bc78f46395b30/salt/roots/salt/basic.sls"&gt;4 kinds of salt states&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="system-packages"&gt;
&lt;h3&gt;System packages&lt;/h3&gt;
&lt;p&gt;The first class of states describes what system packages have to be installed.
Here is the relevant part of the configuration file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;packages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;atlas-sse3-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;blas-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;bzip2-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;czmq-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;freetype-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;gcc-c++&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;git&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;hdf5-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;htop&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;libpng-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;libyaml-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;lzo-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;mercurial&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-Cython&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-devel&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-matplotlib&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-numexpr&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-numpy&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-PyYAML&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-scikit-learn&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-scipy&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-setuptools&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-tables&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;python3-zmq&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;tmux&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;unzip&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;pkg&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;packages&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;pkg&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;:&lt;/span&gt;
&lt;span class="x"&gt;  pkg.installed&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Because salt configuration files are &lt;a class="reference external" href="http://jinja.pocoo.org"&gt;Jinja&lt;/a&gt; templates, it is possible to avoid
unnecessary repetition and keep the configuration file clear.&lt;/p&gt;
&lt;div class="section" id="system-configuration"&gt;
&lt;h4&gt;System configuration&lt;/h4&gt;
&lt;p&gt;The second set of packages configures the system and leaves some hints on how to
run the experiments. The &lt;tt class="docutils literal"&gt;README&lt;/tt&gt; file lists the commands needed to be run to
execute experiments presented in the paper.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="l-Scalar-Plain"&gt;bashrc&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.append&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/.bashrc&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;text&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;export LC_ALL=&amp;quot;en_US.UTF-8&amp;quot;&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;/etc/motd&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.append&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;text&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p-Indicator"&gt;|&lt;/span&gt;
        &lt;span class="no"&gt;Dialogue act tagging.&lt;/span&gt;

        &lt;span class="no"&gt;This is an isolated environment to run dialogue act tagging experiments.&lt;/span&gt;
        &lt;span class="no"&gt;For more details, see http://www.eecs.qmul.ac.uk/~dm303/cvsc14.html&lt;/span&gt;

        &lt;span class="no"&gt;Check README for further instructions.&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;README&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.copy&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/README&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/srv/home/README&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;force&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;true&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;tmux_conf&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.copy&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/.tmux.conf&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/srv/home/tmux.conf&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;force&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="deployment"&gt;
&lt;h3&gt;Deployment&lt;/h3&gt;
&lt;p&gt;The deployment states retrieve the custom experiment software and deploy it. In
my setup I use buildout. By the way, the same buildout configuration is used for
development, which guarantees that it's up to date.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="l-Scalar-Plain"&gt;tools&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;hg.latest&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;https://dimazest@bitbucket.org/dimazest/phd-buildout&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;target&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/tools&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;rev&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;tip&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;runas&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;vagrant&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;tools_buildout.cfg&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.symlink&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/tools/buildout.cfg&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;target&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/tools/_buildout.cfg&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;require&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
      &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hg&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;tools&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;tools_buildout_bootstrap&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;cmd.run&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;python3.3 bootstrap.py&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;cwd&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/tools&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;user&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;vagrant&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;unless&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;ls /home/vagrant/tools/bin/buildout&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;buildout&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;cmd.run&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;bin/buildout&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;cwd&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/tools&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;user&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;vagrant&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;env&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
      &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;LC_ALL&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;en_US.UTF-8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="data"&gt;
&lt;h3&gt;Data&lt;/h3&gt;
&lt;p&gt;The experiments use several resources. &lt;a class="reference external" href="http://compprag.christopherpotts.net/swda.html"&gt;The Switchboard corpus&lt;/a&gt;, its typical
training and testing splits and the word vector spaces. All the data is acquired
and put to the right place by salt:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="l-Scalar-Plain"&gt;swda&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.managed&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/swda.zip&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;http://compprag.christopherpotts.net/code-data/swda.zip&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source_hash&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;sha512=fb24f4c5be4e69490535951237a41cd320fe53d7fb2782d3624b0bb99da7a4461ad1ee8bbfeb3e22e38e0b706ae377787d437eb9308d6d32bf16481f7dd1f228&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;swda_unzip&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;cmd.run&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;yes | unzip swda.zip&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;cwd&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;unless:&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;ls /home/vagrant/swda/&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;swda_train_split&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.managed&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/downloads/switchboard/ws97-train-convs.list.txt&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;http://www.eecs.qmul.ac.uk/~dm303/static/papers/cvsc14/ws97-train-convs.list.txt&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source_hash&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;sha512=d497e4152afc8e3792cfadd0c52ebafad85aea21b65efc5918189a90dfe4aed2604e3d2b6827343d49425b5985a8eb39a3a4729d1c45e572757b4cecb5341bc0&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;swda_test_split&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.managed&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/downloads/switchboard/ws97-test-convs.list.txt&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;http://www.eecs.qmul.ac.uk/~dm303/static/papers/cvsc14/ws97-test-convs.list.txt&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source_hash&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;sha512=cb7e53d3471e63d46b12608db0f2b372c99269a2b7cfa6a4e0997cd7e22d518d5e227a19a572b4de2ce0773434ca5e9ee82022cd88408592dfa16492e3fb0f03&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;nltk_data&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;cmd.run&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/tools/bin/fowler.corpora-py -c &amp;quot;import nltk; nltk.download(&amp;#39;all&amp;#39;)&amp;quot;&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;creates&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/nltk_data&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;user&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;vagrant&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;cvsc14_space_raw&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.managed&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/data/matrix_swda_c-google-100_3k.h5&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;http://www.eecs.qmul.ac.uk/~dm303/static/papers/cvsc14/matrix_swda_c-google-100_3k.h5&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source_hash&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;sha512=c15a9f2d7117305bbcb1b32123e62cfdf0861548d3dc6c2401fd23eeffcb7053c9aa51c16b3ec15236d9aa78385966f92fc5594d77c2ef1066915d20e80d29c4&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;cvsc14_space_tf_idf&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.managed&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/data/matrix_swda_c-google-100_3k_tf-idf-l2.h5&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;http://www.eecs.qmul.ac.uk/~dm303/static/papers/cvsc14/matrix_swda_c-google-100_3k_tf-idf-l2.h5&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source_hash&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;sha512=153572ed754674337a985a8c6ae140cdab73227e2ba74cddad03d13c9e797c32a164b3e917fca43d05bd0238e7a12dce5c5bd24c0f5aec53ed396c31408b023f&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;cvsc14_space_nmf&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;file.managed&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/home/vagrant/data/matrix_swda_c-google-100_3k_line_normalized_nmf1k.h5&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;http://www.eecs.qmul.ac.uk/~dm303/static/papers/cvsc14/matrix_swda_c-google-100_3k_line_normalized_nmf1k.h5&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source_hash&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;sha512=ca14e57e5ceed8073d259088644df6847a9c549b1bad61c9df8563da78ca7f1c239f29b6cbac04091aca90d8c135daff48b7eda8c22b48ffb0cf592f60df6eb5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a nice bonus, the checksums are checked to guarantee that you get the same
data as I.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="meta-experiment"&gt;
&lt;h2&gt;Meta experiment&lt;/h2&gt;
&lt;p&gt;Now, the experiment can be rerun in a few steps:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;hg clone https://bitbucket.org/dimazest/phd-buildout
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;phd-buildout
&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant up  &lt;span class="c"&gt;# I had to wait for 48 minutes...&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant ssh
Last login: Sun Apr  6 14:29:55 2014
Dialogue act tagging.

This is an isolated environment to run dialogue act tagging experiments.
For more details, see http://www.eecs.qmul.ac.uk/~dm303/cvsc14.html

Check README &lt;span class="k"&gt;for &lt;/span&gt;further instructions.
&lt;span class="o"&gt;[&lt;/span&gt;vagrant@localhost ~&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;tools/bin/corpora serafin03 plain-lsa  &lt;span class="c"&gt;# A nice opportunity for my laptop&amp;#39;s fan to show it&amp;#39;s presence :)&lt;/span&gt;
:paper: Serafin et al. 2003
:accuracy: 0.617
:command: tools/bin/corpora serafin03 plain-lsa

&lt;span class="o"&gt;====================&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt;
                 tag  precision     recall   f1-score    &lt;span class="nv"&gt;support&lt;/span&gt;
&lt;span class="o"&gt;====================&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt;
                   %      0.515      0.694      0.592        360
                  ^2      0.190      0.211      0.200         19
                  ^h      0.200      0.143      0.167          7
                  ^q      0.000      0.000      0.000         17
                  aa      0.515      0.327      0.400        208
             aap&lt;span class="se"&gt;\_&lt;/span&gt;am      0.000      0.000      0.000          7
                  ad      0.143      0.037      0.059         27
                  ar      0.000      0.000      0.000          3
             arp&lt;span class="se"&gt;\_&lt;/span&gt;nd      0.000      0.000      0.000          3
                   b      0.764      0.916      0.834        765
                 b^m      0.000      0.000      0.000         21
                  ba      0.529      0.724      0.611         76
                  bd      1.000      1.000      1.000          1
                  bf      0.000      0.000      0.000         23
                  bh      0.480      0.571      0.522         21
                  bk      0.327      0.571      0.416         28
                  br      0.714      0.556      0.625          9
                  fa      0.500      0.500      0.500          2
                  &lt;span class="nb"&gt;fc      &lt;/span&gt;0.660      0.432      0.522         81
fo&lt;span class="se"&gt;\_&lt;/span&gt;o&lt;span class="se"&gt;\_&lt;/span&gt;fw&lt;span class="se"&gt;\_&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\_&lt;/span&gt;by&lt;span class="se"&gt;\_&lt;/span&gt;bc      0.250      0.062      0.100         16
                  fp      0.333      0.200      0.250          5
                  ft      0.000      0.000      0.000          7
                   h      0.667      0.609      0.636         23
                  na      0.000      0.000      0.000         10
                  ng      0.500      0.167      0.250          6
                  nn      0.479      0.885      0.622         26
                  no      0.000      0.000      0.000          6
                  ny      0.455      0.068      0.119         73
                  qh      0.250      0.083      0.125         12
                  qo      0.524      0.688      0.595         16
                 qrr      0.250      0.500      0.333          2
                  qw      0.594      0.345      0.437         55
                qw^d      0.000      0.000      0.000          1
                  qy      0.425      0.405      0.415         84
                qy^d      0.308      0.111      0.163         36
                  sd      0.620      0.790      0.695       1317
                  sv      0.568      0.255      0.352        718
                  t1      0.000      0.000      0.000          1
                   x      0.887      1.000      0.940         94
-------------------- ---------- ---------- ---------- ----------
  weighted avg/total      0.592      0.617      0.582       &lt;span class="nv"&gt;4186&lt;/span&gt;
&lt;span class="o"&gt;====================&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt; &lt;span class="o"&gt;==========&lt;/span&gt;

The model is trained on the full development set.
The scores are computed on the full evaluation set.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="future-work"&gt;
&lt;h2&gt;Future work&lt;/h2&gt;
&lt;p&gt;There are several ways to improve the setup.&lt;/p&gt;
&lt;p&gt;So far, I've used Fedora 20 as the guest OS. It's possible to configure salt to
&lt;a class="reference external" href="http://salt.readthedocs.org/en/v0.17.5/topics/tutorials/states_pt3.html#using-grains-in-sls-modules"&gt;perform different actions for different OS&lt;/a&gt;. For example, it would be nice to
have support for Ubuntu, or even &lt;a class="reference external" href="http://www.gentoo.org/proj/en/gentoo-alt/prefix/"&gt;Gentoo prefix&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Adaptation to another provisioner, for example, &lt;a class="reference external" href="http://docs.vagrantup.com/v2/provisioning/docker.html"&gt;Docker&lt;/a&gt; to minimize isolation
overhead would be another great enhancement.&lt;/p&gt;
&lt;p&gt;Nicer data management, probably, using &lt;a class="reference external" href="http://dat-data.com"&gt;dat&lt;/a&gt; would keep the setup clearer.&lt;/p&gt;
&lt;p&gt;Finally, it would be nice to deploy the created virtual machine in a cloud and
run all the experiments there. The trick is that some experiments require quite
a lot of RAM and were originally run on a machine with 16 CPUs and 128 GB of
RAM.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="vagrant"></category><category term="salt"></category><category term="deployment"></category></entry><entry><title>Software in your reproducible research</title><link href="http://qmcs.github.io/software-in-your-reproducible-research.html" rel="alternate"></link><updated>2014-03-28T17:22:00+00:00</updated><author><name>Dmitrijs Milajevs</name></author><id>tag:qmcs.github.io,2014-03-28:software-in-your-reproducible-research.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://software.ac.uk/cw14"&gt;Collaborations Workshop 2014 (CW14)&lt;/a&gt; took place
in Oxford in the end of March. I was lucky to attend the last day of the meeting
dedicated to ad-hock hacking. I would characterize the main topic of the
workshop as introduction of qualitative software development in scientific
environment.  Here are my thoughts, why &lt;a class="reference external" href="https://twitter.com/dimazest/status/449484586717048832"&gt;reproducibility is a dream that easily
becomes a nightmare&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;I'll start by comparing scientists to professional programmers and operations
and argue that for an experiment to be reproducible the software has to be
reusable. Then, I'll give some suggestions on how to make a reproducible setup.&lt;/p&gt;
&lt;div class="section" id="scientists-are-developers"&gt;
&lt;h2&gt;Scientists are developers&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pydata.org/ldn2014/speakers/#168"&gt;Mark Basham&lt;/a&gt; at &lt;a class="reference external" href="http://pydata.org/ldn2014"&gt;PyData London&lt;/a&gt; stated, what I consider, the pain of researchers
in one sentence. Here is my free recall:&lt;/p&gt;
&lt;blockquote&gt;
Nowadays, scientists have to process so much data that they &lt;strong&gt;have to&lt;/strong&gt;
become programmers.&lt;/blockquote&gt;
&lt;p&gt;I completely agree with it. It's not possible anymore to successfully run an
experiment without using highly optimized libraries for computation, IO and
result representation.&lt;/p&gt;
&lt;p&gt;I would go even further and explain the growing popularity of Python and other
high level languages by the fact that they hide complex implementation behind
simple interfaces (see &lt;a class="reference external" href="http://scikit-learn.org/stable/"&gt;scikit-learn's&lt;/a&gt; &lt;a class="reference external" href="https://github.com/scikit-learn/scikit-learn/blob/6b38d3b3051b4be298d4df4978dc35b56d5eb3a6/sklearn/cross_validation.py"&gt;cross validation code&lt;/a&gt; for an
example).&lt;/p&gt;
&lt;p&gt;Therefore, readability and understandability of code plays an important role. To
the extent that it's very tempting to use the development version of a library
when the code is being written. For example, the user interface of &lt;a class="reference external" href="https://github.com/ipython/ipython/blob/0485089180ff70feac77bd01bf23a410a787d8e5/docs/source/whatsnew/development.rst"&gt;IPython
2&lt;/a&gt;, which is still under development at the moment of writing, improved a lot
in comparison to the current stable version. Quite often development versions
fix encountered bugs, which might be to small to deserve a dedicated release.&lt;/p&gt;
&lt;p&gt;In this mode a scientist behaves like a developer. The more recent is the
software the better.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="scientists-are-not-operations"&gt;
&lt;h2&gt;Scientists are not operations&lt;/h2&gt;
&lt;p&gt;In a software company, eagerness of developers is usually compensated by wisdom
of operations, the people responsible for running and supporting software.&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;operations:&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;/ɒpəˈreɪʃ(ə)ns/&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;noun&lt;/cite&gt;&lt;/p&gt;
&lt;ol class="last arabic simple"&gt;
&lt;li&gt;people who are responsible for deploying and monitoring
services in a company.&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;In academia, usually, there is much less interest to code. Not everyone is
interested to study how an experiment is implemented. The main deliverable from
a scientist-developer is a result that hopefully beats the current state of the
art. In addition, scientists-developers have a strong opinion on what tools to
use and prefer to reinvent a wheel, rather than reuse code written by other
scientists.&lt;/p&gt;
&lt;p&gt;The problem is that it's not easy to reuse code. It has to at least be
documented and well written. Both of the points require a lot of effort, which
might not be appreciated.&lt;/p&gt;
&lt;!-- Now it's a bit messy --&gt;
&lt;/div&gt;
&lt;div class="section" id="scientists-should-be-operations"&gt;
&lt;h2&gt;Scientists should be operations&lt;/h2&gt;
&lt;p&gt;Why should scientist care about the quality of their code? The main reason is
that eventually good code will be reused by someone else. Someone else could be
yet another person in a group, or in a group in another research center. Also,
having a widely adopted tool minimizes amount of surprises. For example, &lt;a class="reference external" href="https://github.com/nltk/nltk/blob/develop/nltk/corpus/reader/bnc.py"&gt;NLTK's
BNC reader&lt;/a&gt;, which takes care of &lt;a class="reference external" href="https://github.com/nltk/nltk/issues/70"&gt;some corner cases&lt;/a&gt;. (A note for a careful
reader: the amount of &lt;a class="reference external" href="https://twitter.com/dimazest/status/442723017958129664"&gt;regexp based code written to process XML&lt;/a&gt; is at least
10 times larger than you think.)&lt;/p&gt;
&lt;p&gt;The bad news is that even &lt;a class="reference external" href="http://maurits.vanrees.org/weblog/archive/2013/05/holger-krekel-re-inventing-python-packaging-testing"&gt;developers are still working on easy code reuse&lt;/a&gt;, aka
packaging, to make operations' live easier!&lt;/p&gt;
&lt;p&gt;Since scientists are already developers, they should learn from operations. This
means that the environment the code runs should be similar from the moment it's
being developed to the moment it's being deployed. This prevents bugs and
minimizes works-for-me situations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-good-project"&gt;
&lt;h2&gt;A good project&lt;/h2&gt;
&lt;p&gt;The documentation of a good project should include testing and deployment
instructions.&lt;/p&gt;
&lt;p&gt;The process should be automated as much as possible. &lt;a class="reference external" href="http://www.testrun.org/tox/"&gt;Tox&lt;/a&gt; is a tool that provides a unified interface to
run tests and hides differences across different test runners.&lt;/p&gt;
&lt;p&gt;In the Python world, usage of eggs and listing of the requirements in
&lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt; and their versions in &lt;tt class="docutils literal"&gt;requirements.txt&lt;/tt&gt; makes deployment
easier, but solves only half of the problem: it takes care only of Python
dependencies and ignores system dependencies, such as libraries written in C.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://vagrantup.com"&gt;Vagrant&lt;/a&gt; is a great tool for virtual machine
management. It allows to use a completely isolated environment as if it was
local. For example, on my Mac I can start a vagrant box with CentOS 6.5 and have
the same environment as the computing server I'll use.&lt;/p&gt;
&lt;p&gt;Taking this into account, this should be necessary steps to run/develop
scientific software:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Get the Vagrant config&lt;/span&gt;
git/hg clone http://project-site.org/project
&lt;span class="nb"&gt;cd &lt;/span&gt;project

&lt;span class="c"&gt;# Start the virtual environment&lt;/span&gt;
vagrant up

&lt;span class="c"&gt;# Connect to it&lt;/span&gt;
vagrant ssh

&lt;span class="c"&gt;# All system dependencies are installed&lt;/span&gt;
cat README
Dialogue act tagging

The environment to run experiments described in Joe Doe. 2015. The Ultimate Dialogue act tagging.

Refer to http://project-site.org/ &lt;span class="k"&gt;for &lt;/span&gt;more information.

The experiment data is stored data/. To &lt;span class="nb"&gt;test &lt;/span&gt;the setup run:

    tox

To run the experiment &lt;span class="nb"&gt;type&lt;/span&gt;:

    bin/tagger doe2015

&lt;span class="c"&gt;# Now I know what to do and happily run the experiment&lt;/span&gt;
bin/tagger doe2015
Tagging accuracy is 100%.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All this fancy and clear setup requires loads of love and care. A virtual
machine image has to be built and hosted somewhere. It has to be updated from
time to time. This is why reproducibility can easily become a nightmare.&lt;/p&gt;
&lt;p&gt;On other hand, having a virtual machine image it can be deployed in a cloud on a
powerful machine in the matter of minutes.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="cw14"></category><category term="programming"></category><category term="reproducibility"></category></entry><entry><title>Anonymity</title><link href="http://qmcs.github.io/anonymity.html" rel="alternate"></link><updated>2014-03-27T18:00:00+00:00</updated><author><name>Anish Patel</name></author><id>tag:qmcs.github.io,2014-03-27:anonymity.html</id><summary type="html">&lt;p&gt;As the world makes a shift online, from our daily habits increasing our reliance
on the internet here is an interesting topic that comes up, the aspect of online
anonymity. Anonymous apps such as Whisper and Secret have made us aware of the
issues we face in the modern world, reigniting the debate as to whether
anonynmity outweights the risk it comes with.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;This is an important topic beyond tech, a question of how humans should treat one
another: Can we improve ourselves? Do we want to? Do we have a moral obligation
to do so? People in tech are outstanding at building, but at moderating? There
we don’t have much of a track record. Even the likes of Facebook have not been
able to control that and make favourable decisions most of the time.&lt;/p&gt;
&lt;p&gt;People are people, and will exhibit bad behaviour almost anywhere so it's more
of an individual choice. We have soldiers in Afghanistan, who might not have
proper resources to get the emotional support they need during combat. This
platform act as a medium to express feelings. Anonymity facilitates the
feeling of &amp;quot;I'm not the only one out there...&amp;quot;.&lt;/p&gt;
&lt;p&gt;Like any other platform there are bound to be issues which we have no control
over, such systems will always get users. But to what end, and at what cost.
Sometimes it depends individually such that our personality defines who we
really are and what we end up doing.&lt;/p&gt;
&lt;p&gt;We all have a story to share, and most of the times we learn from our mistakes
but I believe we can learn from other people's mistakes too.&lt;/p&gt;
&lt;p&gt;The facts are laid out but I think it's all about making the right choice by
figuring out if the positive aspects of this ideas outweigh the negative.&lt;/p&gt;
&lt;p&gt;For those who'd like to give it a try, you can visit &lt;a class="reference external" href="https://www.secret.ly"&gt;Secret&lt;/a&gt;
or &lt;a class="reference external" href="http://whisper.sh"&gt;Whisper&lt;/a&gt; to get a better understanding.&lt;/p&gt;
</summary><category term="apps"></category><category term="anonymity"></category></entry><entry><title>Basic git configuration</title><link href="http://qmcs.github.io/basic-git-configuration.html" rel="alternate"></link><updated>2014-03-04T17:50:00+00:00</updated><author><name>Dmitrijs Milajevs</name></author><id>tag:qmcs.github.io,2014-03-04:basic-git-configuration.html</id><summary type="html">&lt;p&gt;Git is a powerful tool, though it has to be configured first.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Here is a basic &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.gitconfig&lt;/span&gt;&lt;/tt&gt; file that sets you name, sets up aliases and
enables highlighting in git output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[user]&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Dmitrijs Milajevs&lt;/span&gt;
&lt;span class="s"&gt;    email = dimazest@gmail.com&lt;/span&gt;
&lt;span class="k"&gt;[color]&lt;/span&gt;
    &lt;span class="na"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;auto&lt;/span&gt;
&lt;span class="s"&gt;    status = auto&lt;/span&gt;
&lt;span class="s"&gt;    branch = auto&lt;/span&gt;
&lt;span class="s"&gt;    ui = auto&lt;/span&gt;
&lt;span class="s"&gt;    decorate = short&lt;/span&gt;
&lt;span class="k"&gt;[alias]&lt;/span&gt;
    &lt;span class="na"&gt;st&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;status&lt;/span&gt;
&lt;span class="s"&gt;    ci = commit&lt;/span&gt;
&lt;span class="s"&gt;    br = branch&lt;/span&gt;
&lt;span class="s"&gt;    co = checkout&lt;/span&gt;
&lt;span class="s"&gt;    unstage = reset HEAD --&lt;/span&gt;
&lt;span class="s"&gt;    last = log -1 HEAD&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can type &lt;tt class="docutils literal"&gt;git st&lt;/tt&gt; instead of &lt;tt class="docutils literal"&gt;git status&lt;/tt&gt;.&lt;/p&gt;
</summary><category term="git"></category></entry><entry><title>A small Markdown introduction</title><link href="http://qmcs.github.io/a-small-markdown-introduction.html" rel="alternate"></link><updated>2014-03-04T00:00:00+00:00</updated><author><name>Henrik O. Skogmo</name></author><id>tag:qmcs.github.io,2014-03-04:a-small-markdown-introduction.html</id><summary type="html">&lt;p&gt;Giving writers a WYSIWYG makes the assumption that they know how to make stuff
look good. This is wrong. People who work with words should only have to care
about words. Leaving the design choices to the designers. Markdown does an
excellent job in accomplishing this compromise.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Many of the web's most populare publishing tools are now supporting Markdown.
And you might recognise it from Stack Overflow and GitHub. So maybe it's time
you get down with the M-down?&lt;/p&gt;
&lt;p&gt;How the hell do you harvest the sweet markdown nectar? Easy. Kick-start your
favourite (plain)text editor and fire away. Since Markdown is a lightweight
markup language, all of you oldschool BBCode forum writers out there will find
yourselves quite confortable.&lt;/p&gt;
&lt;p&gt;Even though you can find the reference to &lt;a href="http://daringfireball.net/projects/markdown/syntax"&gt;Markdown's
syntax&lt;/a&gt; online, I'll walk
you through some of the basics. Do note that there is alternatives for some of
the elements, so I encourouge you to gaze over the documenation.&lt;/p&gt;
&lt;h2&gt;Headers&lt;/h2&gt;
&lt;p&gt;Use hashtags to mark the level of a header.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# This is an H1&lt;/span&gt;
&lt;span class="c"&gt;## This is an H2&lt;/span&gt;
&lt;span class="c"&gt;### This is an H3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Emphasis&lt;/h2&gt;
&lt;p&gt;Asterisks or underlines&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;quick&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;brown&lt;/span&gt; &lt;span class="n"&gt;fox&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;jumps&lt;/span&gt; &lt;span class="n"&gt;over&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;lazy&lt;/span&gt; &lt;span class="n"&gt;dog&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Becomes "The quick &lt;em&gt;brown fox&lt;/em&gt; jumps over the &lt;strong&gt;lazy dog&lt;/strong&gt;"&lt;/p&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;p&gt;There are multiple ways of making links in MD, either inline or by reference.
However here is the most used way.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//example.com &amp;quot;Title&amp;quot;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Lists&lt;/h2&gt;
&lt;p&gt;Simply use something that looks listy (*, + or -).&lt;/p&gt;
&lt;h3&gt;Unordered&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Red&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Green&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Blue&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Becomes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Red&lt;/li&gt;
&lt;li&gt;Green&lt;/li&gt;
&lt;li&gt;Blue&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ordered&lt;/h3&gt;
&lt;p&gt;(What the numbers are does't matter)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mf"&gt;4.&lt;/span&gt; &lt;span class="n"&gt;Red&lt;/span&gt;
&lt;span class="mf"&gt;0.&lt;/span&gt; &lt;span class="n"&gt;Green&lt;/span&gt;
&lt;span class="mf"&gt;4.&lt;/span&gt; &lt;span class="n"&gt;Blue&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Becomes&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Red&lt;/li&gt;
&lt;li&gt;Green&lt;/li&gt;
&lt;li&gt;Blue&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Code&lt;/h2&gt;
&lt;h3&gt;Inline&lt;/h3&gt;
&lt;p&gt;Use the backtick quotes (`) for &lt;code&gt;inline code&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Block&lt;/h3&gt;
&lt;p&gt;4 spaces or 1 tab indention&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;HAI&lt;/span&gt; &lt;span class="mf"&gt;1.2&lt;/span&gt;
  &lt;span class="n"&gt;CAN&lt;/span&gt; &lt;span class="n"&gt;HAS&lt;/span&gt; &lt;span class="n"&gt;STDIO&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;
  &lt;span class="n"&gt;VISIBLE&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;HAI WORLD!!!1!&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;KTHXBYE&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you would like to start using Markdown locally on your own system I have a
couple of Markdown readers to recommend. Even though you don't strickly need
anything fancy to write Markdown, you still need something to parse it.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mouapp.com/"&gt;Mou&lt;/a&gt; for Mac
&lt;a href="http://markdownpad.com/"&gt;MarkdownPad&lt;/a&gt; for Windowns
&lt;a href="http://sourceforge.net/p/retext/home/ReText/"&gt;ReText&lt;/a&gt; for Linux&lt;/p&gt;</summary><category term="markdown"></category><category term="markup"></category><category term="languages"></category></entry><entry><title>Approximating Randomness</title><link href="http://qmcs.github.io/approximating-randomness.html" rel="alternate"></link><updated>2014-03-03T18:00:00+00:00</updated><author><name>Filip Ter</name></author><id>tag:qmcs.github.io,2014-03-03:approximating-randomness.html</id><summary type="html">&lt;p&gt;Generating random numbers from computers is essential to the development
of certain kinds of software. Anything from modelling the environment, to a
lottery machine, to determining the value of loot in a chest in an RPG, will
require random number generation. At first it may seem strange that computers,
which are capable of producing massive amounts of digits in a short time,
would not be able to produce random numbers. The difficulty is that the
computers we use, are constructed specifically to follow logical steps
deterministically, so to generate numbers that are truly random from a system
like our computers is virtually impossible. True randomness cannot be obtained
using arithmetic operations, which is exactly what our computers perform. When
some sequence of numbers is random then it is not possible to predict what the
next digit will be, and since computers use a set of logical steps to create
any new number it is theoretically possible to predict it. Nonetheless
programmers take advantage of features for creating random numbers all the
time, the most widely used programming languages, provide libraries that can
generate 'random' values. Any role-playing game for example, that you might
use, needs random values to determine the number of gold you'll find from some
locations, what items dead enemies will drop, etc. So how is it possible that
even though the very nature of computers makes it impossible to exhibit random
behaviour, that many programs include simulations of randomness?&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;The answer is pseudo-random number generators(PRNG), these are programs that
follow a certain algorithm to simulate random behaviour. The numbers they
generate, cannot be by definition truly random, however for many uses it is a
good enough approximation. The libraries in many of todays programming
languages that generate random digits use PRNG's. The basic idea is to perform
some arithmetic operations on a number in sequence, to make it seem like it's
random. A PRNG always starts with an initial value called a seed. It will then
perform operations on the seed to make the final number different from the
original value. So when the PRNG is supplied with seeds that are in sequence,
it will return numbers that seem random, because the operations that are
performed on each number should change it to make it so the returned numbers
are no longer following any pattern. PRNG's are also periodical, they have a certain
amount of numbers they produce, and after that the sequence starts to repeat
itself. It is usually not a problem to make the period very large, so that the
application that relies on it will never start to get repeated sequences.&lt;/p&gt;
&lt;p&gt;A very well known PRNG is the Mersenne Twister(1), it is the default PRNG for
Python, Ruby, PHP and many others. It has a period of 2^(19937−1), which is a
Mersenne prime number, hence the name of the generator. Invented in 1997 it
was largely superior to PRNG's like C's rand or Java's Random. Furthermore it
passes certain statistical tests for randomness so it is a very reliable
generator as it is very successful at simulating genuine randomness.&lt;/p&gt;
&lt;p&gt;These programs have been used extensively and are relied upon by many applications,
it is important to note that when truly random behaviour is needed then PRNG's
are not sufficient. John von Neumann famously said: “Anyone who considers
arithmetical methods of producing random digits is, of course, in a state of
sin.&amp;quot; In this situation he was referring to depending on PRNG's or other
arithmetic approaches to create truly random digits, which is not a good idea.
Rather it is possible to use true random number generators, that are based on
the idea of extracting physical phenomena that are believed to be random and
using them to generate random numbers. For example atmospheric noise, or
radioactive decay, etc. Even though it is possible to extract truly random
numbers from the outside world, most applications that use random numbers use
PRNG's. It is because of their convenience, there is no need for any extra
devices, or input, all it needs is a sequence of numbers that it later
transforms into a pseudo-random sequence.&lt;/p&gt;
&lt;p&gt;1: Link to the implementation of Mersenne Twister. This is the latest version from the original creators:
&lt;a class="reference external" href="http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/CODES/mt19937ar.c"&gt;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/CODES/mt19937ar.c&lt;/a&gt;&lt;/p&gt;
</summary><category term="random"></category><category term="prng"></category><category term="languages"></category></entry><entry><title>Facebook Hackathon</title><link href="http://qmcs.github.io/facebook-hackathon.html" rel="alternate"></link><updated>2014-02-28T19:32:00+00:00</updated><author><name>Umar Qureshi</name></author><id>tag:qmcs.github.io,2014-02-28:facebook-hackathon.html</id><summary type="html">&lt;p&gt;If you havent heard yet, Facebook will be hosting a Hackathon on Saturday, 15
March 2014. A Hackathon is a (codefest) event where computer programmers and
others involved in software development, graphic designers, interface
designers and project managers collaborate intensively on software
projects.Hackathons tend to have a specific focus, which can include the
programming language used, the operating, an application, an API, or the
subject and the demographic group of the programmer. Though for the Facebook
hackthon, there isnt any restriction on what you can make so aim for the sky.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;So Join Facebook in London as we stay up all night hacking, learning and
having a some fun! Start brainstorming ideas &amp;amp; forming teams (of up to 4
people). Facebook will suply us with  food, fun diversions, prizes, and some
expert guidance in the form of our engineers. Travel will be reimbursed for
public transportation.You bring your laptop, appetite, skills and ideas.&lt;/p&gt;
&lt;p&gt;The winning team will get the chance to compete against teams from other
Hackathons both domestically and internationally at the Hackathon Finals and
be judged by Facebook executives -- held at Facebook HQ in Menlo Park,
California in November!&lt;/p&gt;
&lt;p&gt;Here is a link for registration
&lt;a class="reference external" href="https://www.surveymonkey.com/s/londonhackathon"&gt;https://www.surveymonkey.com/s/londonhackathon&lt;/a&gt;. Register before the 4th of
March. The event is over subscribed but you can still apply. Be ready for a
coding puzzle on the 4th of March, this will be your ticket to the event.&lt;/p&gt;
</summary><category term="Facebook"></category></entry><entry><title>Middlesex Algorithms Day</title><link href="http://qmcs.github.io/middlesex-algorithms-day.html" rel="alternate"></link><updated>2014-02-26T12:02:00+00:00</updated><author><name>Dmitrijs Milajevs</name></author><id>tag:qmcs.github.io,2014-02-26:middlesex-algorithms-day.html</id><summary type="html">&lt;p&gt;Middlesex University organizes an &lt;a class="reference external" href="http://www.cs.mdx.ac.uk/foundations/middlesex-algorithms-day-mad-2014/"&gt;Algorithms Day&lt;/a&gt; in
the Hendon Town Hall, on Friday the 14th of March. Also, the solutions and
pictures from the EECS programming competitions are &lt;a class="reference external" href="http://www.eecs.qmul.ac.uk/~pbo/competition/2014/"&gt;published&lt;/a&gt;.&lt;/p&gt;
</summary><category term="algorithms"></category></entry><entry><title>Pyclub Twitter account</title><link href="http://qmcs.github.io/pyclub-twitter-account.html" rel="alternate"></link><updated>2014-02-25T16:47:00+00:00</updated><author><name>Dmitrijs Milajevs</name></author><id>tag:qmcs.github.io,2014-02-25:pyclub-twitter-account.html</id><summary type="html">&lt;p&gt;I'm happy to announce that we have a Twitter account. Follow &lt;a class="reference external" href="https://twitter.com/pyclub_qm"&gt;&amp;#64;pyclub_qm&lt;/a&gt;.&lt;/p&gt;
</summary><category term="twitter"></category></entry><entry><title>Pydata</title><link href="http://qmcs.github.io/pydata.html" rel="alternate"></link><updated>2014-02-22T10:21:00+00:00</updated><author><name>Dmitrijs Milajevs</name></author><id>tag:qmcs.github.io,2014-02-22:pydata.html</id><summary type="html">&lt;p&gt;The Pydata conference has started and the venue has a great view to East
London. If you look carefully, you can spot Queen Mary.&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://qmcs.github.io/static/images/pydata-qmul-large.jpg"&gt;&lt;img alt="East London" class="align-center" src="http://qmcs.github.io/static/images/pydata-qmul.jpg" /&gt;&lt;/a&gt;
</summary><category term="pydata"></category></entry><entry><title>GSOC project: MoinMoin</title><link href="http://qmcs.github.io/gsoc-project-moinmoin.html" rel="alternate"></link><updated>2014-02-10T11:17:00+00:00</updated><author><name>Dmitrijs Milajevs</name></author><id>tag:qmcs.github.io,2014-02-10:gsoc-project-moinmoin.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://moinmo.in/"&gt;MoinMoin&lt;/a&gt;, a wiki engine, published &lt;a class="reference external" href="https://moinmo.in/GoogleSoc2014/InitialProjectIdeas"&gt;initial project ideas&lt;/a&gt; for the &lt;a class="reference external" href="http://www.google-melange.com/gsoc/homepage/google/gsoc2014"&gt;Google
Summer of Code 2014&lt;/a&gt;. MoinMoin is a mature project with a wonderful core team.
They participated in GSOC for many years.&lt;/p&gt;
</summary><category term="gsoc"></category></entry><entry><title>QCon London</title><link href="http://qmcs.github.io/qcon-london.html" rel="alternate"></link><updated>2014-01-31T17:42:00+00:00</updated><author><name>Dmitrijs Milajevs</name></author><id>tag:qmcs.github.io,2014-01-31:qcon-london.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://qconlondon.com/"&gt;QCon London&lt;/a&gt; is looking for students to volunteer.
Get more details and fill in the application form &lt;a class="reference external" href="http://qconlondon.com/london-2014/crew/"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><category term="conference"></category><category term="scholarship"></category></entry><entry><title>PyData, Europython and Google</title><link href="http://qmcs.github.io/pydata-europython-and-google.html" rel="alternate"></link><updated>2014-01-29T09:03:00+00:00</updated><author><name>Dmitrijs Milajevs</name></author><id>tag:qmcs.github.io,2014-01-29:pydata-europython-and-google.html</id><summary type="html">&lt;p&gt;There are several events on the radar that not only give you loads of
knowledge, but also give you some money.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;div class="section" id="pydata-in-london"&gt;
&lt;h2&gt;PyData in London&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pydata.org/ldn2014"&gt;PyData&lt;/a&gt; is a conference dedicated to the scientific tools in Python. London is
the first city outside the U.S. that hosts the conference on February 21 - 23.&lt;/p&gt;
&lt;p&gt;This time several &lt;a class="reference external" href="http://pydata.org/ldn2014/news/"&gt;diversity scholarships&lt;/a&gt; are offered. Here is the
announcement from the conference page:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the goals of PyData is to increase awareness and excitement around
opportunities for women and underrepresented groups in software engineering.
To increase diversity in scientific computing, our outreach programmes range
from hosting workshops to introduce programming to young women, to encouraging
diversity in speakers.&lt;/p&gt;
&lt;p&gt;For PyData London 2014, we are offering scholarship opportunities to women and
those from other underrepresented groups who may otherwise be unable to attend
the conference. Generous donations from the Python Software Foundation and
NumFocus have made these efforts possible.&lt;/p&gt;
&lt;p&gt;To apply for a scholarship, please fill out our &lt;a class="reference external" href="https://docs.google.com/forms/d/1Ke-RVO09nDgZBls6zt0PDpNLRGczykRB-cRTwrRReqk/viewform"&gt;application&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Go ahead and drop several lines!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="europython-in-berlin"&gt;
&lt;h2&gt;Europython in Berlin&lt;/h2&gt;
&lt;p&gt;Europython is a largest Python related event in Europe. It's usually running
for a week. This year the conference will be in Berlin, Germany, on July 21 -
27.&lt;/p&gt;
&lt;p&gt;It is possible to get early bit tickets with a student discount, you just need
to &lt;a class="reference external" href="http://blog.europython.eu/post/74824001195/the-early-bird-ticket-sale-will-start-soon-special"&gt;send your student ID&lt;/a&gt;. Grants should be announced soon, so read their
&lt;a class="reference external" href="http://blog.europython.eu"&gt;blog&lt;/a&gt; or follow &lt;a class="reference external" href="https://twitter.com/europython"&gt;&amp;#64;europython&lt;/a&gt;. See you in Berlin.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="google-summer-of-code-worldwide"&gt;
&lt;h2&gt;Google Summer of Code worldwide&lt;/h2&gt;
&lt;p&gt;In case you didn't hear about &lt;a class="reference external" href="http://www.google-melange.com/gsoc/document/show/gsoc_program/google/gsoc2014/about_page"&gt;Google Summer of Code&lt;/a&gt;, it is something like
a software engineering project, but first, you do something useful, second,
you get a lot of support from professional developers (so you are not alone
trying to configure SVN and NetBeans), and you get paid.&lt;/p&gt;
&lt;p&gt;So far the program is in early stage, the list of accepted projects &lt;a class="reference external" href="http://www.google-melange.com/gsoc/events/google/gsoc2014"&gt;will be
published on February 24&lt;/a&gt;. However, it's a good idea to go trough the
&lt;a class="reference external" href="http://www.google-melange.com/gsoc/projects/list/google/gsoc2013"&gt;project list of 2013&lt;/a&gt; to get an idea of possible projects and good
applications.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="conference"></category><category term="scholarship"></category></entry><entry><title>Welcome to the QM Python club</title><link href="http://qmcs.github.io/welcome.html" rel="alternate"></link><updated>2014-01-28T19:49:00+00:00</updated><author><name>Dmitrijs Milajevs</name></author><id>tag:qmcs.github.io,2014-01-28:welcome.html</id><summary type="html">&lt;p&gt;Follow the &lt;a class="reference external" href="https://github.com/pyclub/pyclub.github.io/blob/pelican/README.rst"&gt;instructions&lt;/a&gt; if you
want to add an article.&lt;/p&gt;
</summary><category term="thats"></category><category term="awesome"></category></entry></feed>